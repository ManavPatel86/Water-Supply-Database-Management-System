-- 1. List pincode, Area and that pincode-wise number of total customers

SELECT 
    PC.Pin_Code,
    PC.Area,
    COUNT(C.Customer_ID) AS Total_Customers
FROM 
    Pin_Code PC
JOIN 
    Customer C ON PC.Pin_Code = C.Pin_Code
GROUP BY 
    PC.Pin_Code, PC.Area
ORDER BY 
    Total_Customers DESC;


-- 2. List pincode-wise names and phone numbers of inactive customers

SELECT 
    C.Pin_Code,
    C.Customer_Name,
    C.Phone_Number
FROM 
    Customer C
WHERE 
    C.Connection_Status = 'Inactive'
ORDER BY 
    C.Pin_Code;


-- 3. List areas and Pin-code having outages in the in given time

SELECT
    pc.Pin_Code, pc.area, COUNT(ou.Outage_ID) AS Outage_Count
FROM
    Outage as ou
NATURAL JOIN
    affect_area as aa
NATURAL JOIN
    pin_code as pc
WHERE
    ou.start_date_time BETWEEN '2025-04-01' AND '2025-04-19'
GROUP By
    pc.Pin_Code
HAVING
    COUNT(Outage_ID) > 0;


-- 4. List municipal corporations and their average WQI

SELECT 
    MC.Name AS Corporation_Name,
    ROUND(AVG(P.Before_WQI), 2) AS Avg_Before_WQI,
    ROUND(AVG(P.After_WQI), 2) AS Avg_After_WQI
FROM 
    Municipal_Corporation MC
JOIN 
    Water_Source WS ON MC.Corporation_ID = WS.Corporation_ID
JOIN 
    Purifies P ON WS.Water_Source_ID = P.Water_Source_ID
GROUP BY 
    MC.Name;


-- 5. List total revenue generated by each customer type in a given year (e.g., 2025)

SELECT 
    CT.Type_Name AS Customer_Type,
    SUM(B.Total_Price) AS Total_Revenue
FROM 
    Customer C
JOIN 
    Customer_Type CT ON C.Customer_Type_ID = CT.Customer_Type_ID
JOIN 
    Meter M ON C.Customer_ID = M.Customer_ID
JOIN 
    Bill B ON M.Meter_ID = B.Meter_ID
WHERE 
    EXTRACT(YEAR FROM B.Billing_Date) = 2025
GROUP BY 
    CT.Type_Name;


-- 6. List total revenue generated by each area (pincode) in a given year (e.g., 2024)

SELECT 
    PC.Pin_Code,
    PC.Area,
    SUM(B.Total_Price) AS Total_Revenue
FROM 
    Customer C
JOIN 
    Pin_Code PC ON C.Pin_Code = PC.Pin_Code
JOIN 
    Meter M ON C.Customer_ID = M.Customer_ID
JOIN 
    Bill B ON M.Meter_ID = B.Meter_ID
WHERE 
    EXTRACT(YEAR FROM B.Billing_Date) = 2025
GROUP BY 
    PC.Pin_Code, PC.Area
ORDER BY 
    Total_Revenue DESC;


-- 7. Average salary spent on maintenance teams, categorized by their types

SELECT 
    MT.Team_Type,
    ROUND(AVG(E.Salary), 2) AS Average_Salary
FROM 
    Employee E
JOIN 
    Maintainence_Team MT ON E.Team_ID = MT.Team_ID
GROUP BY 
    MT.Team_Type;


-- 8. For employee 'Rahul Patel', list his team ID, team type, and maintenance schedule dates for next 10 days
SELECT 
    E.Employee_Name,
    E.Team_ID,
    MT.Team_Type,
    MS.Date AS Maintenance_Date
FROM 
    Employee E
JOIN 
    Maintainence_Team MT ON E.Team_ID = MT.Team_ID
JOIN 
    Maintenance_Schedule MS ON E.Team_ID = MS.Team_ID
WHERE 
    E.Employee_Name = 'Rahul Patel'
    AND MS.Date BETWEEN CURRENT_DATE AND CURRENT_DATE + INTERVAL '10 days'
ORDER BY 
    MS.Date;


-- 9. For Municipal Corporation 'SMC',give total salary they spend on their employees

SELECT 
    MC.Name AS Corporation_Name,
    SUM(E.Salary) AS Total_Salary_Expenditure
FROM 
    Employee E
JOIN 
    Water_Reservoir WR ON E.Reservoir_ID = WR.Reservoir_ID
JOIN 
    Purification_Plant PP ON WR.Plant_ID = PP.Plant_ID
JOIN 
    Pin_Code PC ON PP.Pin_Code = PC.Pin_Code
JOIN 
    Municipal_Corporation MC ON PC.Pin_Code = MC.Pin_Code
WHERE 
    MC.Name ILIKE 'SMC'
GROUP BY 
    MC.Name;


-- 10. For All municipal corporation ,give total bill revenue they get from customers

SELECT 
    MC.Name AS Corporation_Name,
    SUM(B.Total_Price) AS Total_Revenue
FROM 
    Bill B
JOIN 
    Meter M ON B.Meter_ID = M.Meter_ID
JOIN 
    Customer C ON M.Customer_ID = C.Customer_ID
JOIN 
    Pin_Code PC ON C.Pin_Code = PC.Pin_Code
JOIN 
    Municipal_Corporation MC ON PC.Pin_Code = MC.Pin_Code
GROUP BY 
    MC.Name;


-- 11. List average WQI improvement by plant types

SELECT 
    PP.Plant_Type,
    ROUND(AVG(P.After_WQI - P.Before_WQI), 2) AS Avg_WQI_Improvement
FROM 
    Purifies P
JOIN 
    Purification_Plant PP ON P.Plant_ID = PP.Plant_ID
GROUP BY 
    PP.Plant_Type;


-- 12 . List pincode, area, and pincode-wise total consumed water (sum of all meter current readings)

SELECT 
    PC.Pin_Code,
    PC.Area,
    SUM(M.Current_Reading) AS Total_Consumed_Water
FROM 
    Customer C
JOIN 
    Meter M ON C.Customer_ID = M.Customer_ID
JOIN 
    Pin_Code PC ON C.Pin_Code = PC.Pin_Code
GROUP BY 
    PC.Pin_Code, PC.Area
ORDER BY 
    Total_Consumed_Water DESC;


-- 13. List year and year-wise total consumed water (derived from bill & water rate)

SELECT 
    EXTRACT(YEAR FROM B.Billing_Date) AS Billing_Year,
    ROUND(SUM(B.Total_Price / WR.Water_Rate), 2) AS Total_Consumed_Water
FROM 
    Bill B
JOIN
	Water_Rate WR
ON
	B.rate_id=WR.rate_id
GROUP BY 
    Billing_Year
ORDER BY 
    Billing_Year;

-- 14. List all water sources with WQI less than 65.0 (based on Before_WQI in Purifies)

SELECT DISTINCT 
    WS.Water_Source_ID,
    WS.type,
    P.Before_WQI
FROM 
    Purifies P
JOIN 
    Water_Source WS ON P.Water_Source_ID = WS.Water_Source_ID
WHERE 
    P.Before_WQI < 65.0
ORDER BY 
    P.Before_WQI ASC;


-- 15. For given pincode & area, give total remaining capacity of water distribution stations

SELECT 
    PC.Pin_Code,
    PC.Area,
    SUM(WDS.S_Capacity - WDS.Water_Level) AS Remaining_Capacity
FROM 
    Water_Distribution_Station WDS
JOIN 
    Pin_Code PC ON WDS.Pin_Code = PC.Pin_Code
WHERE 
    PC.Pin_Code = '380001' 
GROUP BY 
    PC.Pin_Code, PC.Area;

-- 16. For given pincode & area, give total remaining capacity of water reservoirs

SELECT 
    PC.Pin_Code,
    PC.Area,
    SUM(WR.R_Capacity - WR.Water_Level) AS Remaining_Capacity
FROM 
    Water_Reservoir WR
JOIN 
    Purification_Plant PP ON WR.Plant_ID = PP.Plant_ID
JOIN 
    Pin_Code PC ON PP.Pin_Code = PC.Pin_Code
WHERE 
    PC.Pin_Code = '380015'
GROUP BY 
    PC.Pin_Code, PC.Area;



-- 17. List maintenance schedule with corresponding outage cause, outage start & end time, and corresponding water reservoir

SELECT 
    MS.Maintenance_ID,
    MS.Date AS Maintenance_Date,
    O.Cause AS Outage_Cause,
    O.Start_Date_Time,
    O.End_Date_Time,
    WR.Reservoir_ID
FROM 
    Maintenance_Schedule MS
JOIN 
    Outage O ON MS.Maintenance_ID = O.Maintenance_ID
JOIN 
    Water_Reservoir WR ON MS.Reservoir_ID = WR.Reservoir_ID
ORDER BY 
    MS.Date;

-- 18. For given customer (e.g., ID 19), total price they need to pay currently

SELECT 
    C.Customer_Name,
	C.Customer_ID,
    SUM(B.Total_Price) AS Total_Amount_Due
FROM 
    Customer C
JOIN 
    Meter M ON C.Customer_ID = M.Customer_ID
JOIN 
    Bill B ON M.Meter_ID = B.Meter_ID
WHERE 
    C.Customer_ID=19
    AND B.Payment_Status = 'Unpaid'
GROUP BY 
    C.Customer_ID;

-- 19. Find customers with unpaid bills over a certain amount

SELECT 
    C.Customer_ID,
    C.Customer_Name,
    C.Customer_Type_ID,
	C.Phone_Number,
    SUM(B.Total_Price) AS Unpaid_Amount
FROM 
    Customer C
JOIN 
    Meter M ON C.Customer_ID = M.Customer_ID
JOIN 
    Bill B ON M.Meter_ID = B.Meter_ID
WHERE 
    B.Payment_Status = 'Unpaid'
GROUP BY 
    C.Customer_ID, C.Customer_Name, C.Customer_Type_ID
HAVING 
    SUM(B.Total_Price) > 1000
ORDER BY 
    Unpaid_Amount DESC;


--20. For given pincode, area â€“ list all customers (name, type) who have given feedback, and their corresponding feedback

SELECT 
    C.Customer_Name,
    C.Customer_Type_ID,
    C.Feedback
FROM 
    Customer C
NATURAL JOIN
	Pin_code PC
WHERE 
    PC.Area='Nanpura' AND C.Feedback IS NOT NULL
ORDER BY 
    C.Customer_Name;
